// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Questionnaire_and_FeedbackForm.Models;

#nullable disable

namespace Questionnaire_and_FeedbackForm.Migrations
{
    [DbContext(typeof(QuestionnaireDataDBContext))]
    [Migration("20220825015104_principal_column_to_Questionnaire")]
    partial class principal_column_to_Questionnaire
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.ModelOption", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("GroupKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionColumn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ModelOptions");
                });

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.Questionnaire", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Other_Idea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process_Fraction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service_Fraction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deal_with_idea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deal_with_person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("deal_with_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("principal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.RoleAndPermission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RoleAndPermissions");
                });

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.SystemFeedbackForm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Fill_In_Person")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Problem_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Send_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("System_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("deal_with_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SystemFeedbackForms");
                });

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.Questionnaire", b =>
                {
                    b.HasOne("Questionnaire_and_FeedbackForm.Models.SystemFeedbackForm", "SystemFeedbackForm")
                        .WithOne("Questionnaire")
                        .HasForeignKey("Questionnaire_and_FeedbackForm.Models.Questionnaire", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemFeedbackForm");
                });

            modelBuilder.Entity("Questionnaire_and_FeedbackForm.Models.SystemFeedbackForm", b =>
                {
                    b.Navigation("Questionnaire")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
